name: Deploy CodeCollab Server

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t hoangtung2354/codecollab-server .

      - name: Publish Image to Docker Hub
        run: docker push hoangtung2354/codecollab-server:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull Docker Image from Hub
        run: docker pull hoangtung2354/codecollab-server:latest

      - name: Run redis container
        run: |
          if [ ! "$(docker ps -a --format '{{.Names}}' | grep redis-container)" ]; then
            docker run -d --name redis-container -p 6379:6379 --network=codecollab redis:alpine
          fi

      - name: Remove existing server container
        run: |
          if [ "$(docker ps -a --format '{{.Names}}' | grep server-container)" ]; then
            docker stop server-container
            docker rm server-container 
          fi

      - name: Run Server Container
        run: |
          docker run -d -p 3000:3000 --network=codecollab --name server-container \
          -e DB_URL='${{ secrets.DB_URL }}' \
          -e REDIS_URL='${{ secrets.REDIS_URL }}' \
          -e SESSION_SECRET='${{ secrets.SESSION_SECRET }}' \
          -e RAPID_API_URL='${{ secrets.RAPID_API_URL }}' \
          -e RAPID_API_HOST='${{ secrets.RAPID_API_HOST }}' \
          -e RAPID_API_KEY='${{ secrets.RAPID_API_KEY }}' \
          -e BACKEND_PORT='${{ secrets.BACKEND_PORT }}' \
          -e AWS_ACCESS_KEY='${{ secrets.AWS_ACCESS_KEY }}' \
          -e AWS_SECRET_KEY='${{ secrets.AWS_SECRET_KEY }}' \
          -e AWS_BUCKET_NAME='${{ secrets.AWS_BUCKET_NAME }}' \
          -e AWS_BUCKET_REGION='${{ secrets.AWS_BUCKET_REGION }}' \
          -e AWS_DEFAULT_URL='${{ secrets.AWS_DEFAULT_URL }}' \
          -e AWS_DEFAULT_FILENAME='${{ secrets.AWS_DEFAULT_FILENAME }}' \
          -e ImageKit_Endpoint='${{ secrets.ImageKit_Endpoint }}' \
          hoangtung2354/codecollab-server:latest

      - name: Remove dangling images
        run: docker rmi -f $(docker images -f "dangling=true" -q)
